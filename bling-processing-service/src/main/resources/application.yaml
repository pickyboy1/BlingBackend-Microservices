server:
  port: 3004

spring:
  application:
    name: bling-processing-service # 【关键改动】为您的核心服务命名
  profiles:
    active: dev
  config:
    import:
      - nacos:bling-common-dev.yaml?refresh=true
      - nacos:kafka-common.yaml?refresh=true
      - nacos:kafka-consumer-defaults.yaml?refresh=true
  cloud:
    nacos:
      # Nacos 服务器的地址
      server-addr: 192.168.31.128:8848
      config:
        # 配置文件格式
        file-extension: yaml
  kafka:
    # 普通消费者的配置
    consumer:
      # 【建议】为这个服务的监听器明确指定一个消费组ID
      group-id: bling-processing-group
    # Kafka Streams 的专属配置
    streams:
      # 【关键补充】必须为 Kafka Streams 应用提供一个唯一的 application.id
      application-id: hot-article-streams-app
      properties:
        # 推荐配置：确保数据被完全处理
        processing.guarantee: exactly_once_v2
  # Jackson序列化配置
  jackson:
    enabled: true
  # Security配置
  security:
    enabled: false
  # Redis配置（如果需要使用Redis）
  data:
    redis:
      enabled: true

# ===============================
# 通用模块条件配置
# ===============================
common:
  config:
    filter:
      # 启用用户上下文过滤器
      enabled: false
      # 开启debug日志，方便调试
      debug: false

# ===============================
# MyBatis-Plus配置
# ===============================
mybatis-plus:
  # 启用MyBatis-Plus功能
  enabled: true
  auto-fill:
    # 启用自动填充功能
    enabled: true

# ===============================
# 对象存储配置（按需启用）
# ===============================
minio:
  # 如果需要使用MinIO，请启用并配置
  enabled: true
  # endpoint: http://localhost:9000
  # access-key: minioadmin
  # secret-key: minioadmin

# ===============================
# 已废弃的认证配置（保持禁用）
# ===============================
yuque:
  jwt:
    # 登录需要使用
    enabled: false

pickyboy:
  auth:
    # 认证已迁移到网关，保持禁用状态
    enabled: false

# ===============================
# 日志配置
# ===============================
logging:
  level:
    com.pickyboy.blingBackend: DEBUG
    com.pickyboy.blingBackend.common.filter.UserContextFilter: DEBUG
    org.apache.kafka: INFO # Kafka日志较多，可以设为INFO



